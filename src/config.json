{
  "apiUrl": "",
  "actUserId": 1,
  "objectColors": {
    "country": "#c08",
    "fqdn": "#c00",
    "hash": "#0a8",
    "incident": "#06b",
    "ipv4": "#00c",
    "location": "#d2d",
    "report": "#0a0",
    "technique": "#d04",
    "threatActor": "#606",
    "tool": "#b60",
    "uri": "#0c0"
  },
  "autoResolveFacts": {
    "*": ["category", "name"],
    "path": ["basename"],
    "uri": ["port", "scheme"]
  },
  "objectLabelFromFactType": "name",
  "actions": {
    "open-in-vt": {
      "name": "Virus Total",
      "description": "Lookup on Virus Total",
      "type": "link",
      "urlPattern": "https://www.virustotal.com/gui/file/:objectValue"
    }
  },
  "contextActions": [{
    "objects": [
      "content",
      "hash"
    ],
    "action":  "open-in-vt"}
  ],
  "predefinedObjectQueries": [
    {
      "name": "asn",
      "description": "Find the autonomous systems and owner organizations of IP addresses mentioned in this report.",
      "query": "g.outE('mentions').otherV().hasLabel(within('ipv4','ipv6')).repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()).path().unfold()",
      "objects": ["report"]
    },
    {
      "name": "related",
      "description": "Find other reports that mention indicators from this report.",
      "query": "g.as('startNode').outE('mentions').otherV().hasLabel(within('ipv4','ipv6','fqdn','hash','email','uri')).inE('mentions').otherV().hasLabel('report').where(neq('startNode')).path().unfold()",
      "objects": ["report"]
    },
    {
      "name": "context",
      "description": "Find other information related to the indicators mentioned in this report (might give large result set).",
      "query": "g.outE('mentions').otherV().choose(label()).option('hash',outE('represents').otherV().optional(bothE().otherV())).option('ipv4',union(outE('componentOf').otherV(),where(inE('resolvesTo').count().is(lte(50L))).inE('resolvesTo').otherV(),repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()))).option('fqdn',where(outE('resolvesTo').count().is(lte(50L))).outE('resolvesTo').otherV()).option('threatActor',emit().repeat(outE('alias').outV().dedup()).until(cyclicPath())).option('tool',emit().repeat(outE('alias').outV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["report"]
    },
    {
      "name": "incidents",
      "description": "Find incidents related to network indicators in this report.",
      "query": "g.outE('mentions').otherV().hasLabel(within('ipv4','ipv6','fqdn')).outE('componentOf').otherV().outE('observedIn').otherV().outE('attributedTo').otherV().path().unfold()",
      "objects": ["report"]
    },
    {
      "name": "tools",
      "description": "Find tools related to the hashes mentioned in this report.",
      "query": "g.outE('mentions').otherV().hasLabel('hash').outE('represents').otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["report"]
    },
    {
      "name": "reports",
      "description": "Find reports that mention IP addresses from this autonomous system.",
      "query": "g.repeat(inE('memberOf').otherV()).times(2).inE('mentions').otherV().path().unfold()",
      "objects": ["asn"]
    },
    {
      "name": "tools",
      "description": "Find tools with observed network traffic to this autonomous system.",
      "query": "g.repeat(inE('memberOf').otherV()).times(2).outE('componentOf').otherV().hasLabel('uri').inE().hasLabel(within('at','connectsTo')).otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["asn"]
    },
    {
      "name": "asn",
      "description": "Find the autonomous system and owner organization of this IP address.",
      "query": "g.repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()).path().unfold()",
      "objects": [
        "ipv4",
        "ipv6"
      ]
    },
    {
      "name": "threat actors",
      "description": "Find threat actors related to this indicator.",
      "query": "g.outE('componentOf').otherV().hasLabel('uri').optional(inE().hasLabel(within('at','connectsTo')).otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV()).outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": [
        "fqdn",
        "ipv4",
        "ipv6"
      ]
    },
    {
      "name": "tools",
      "description": "Find tools related to this indicator.",
      "query": "g.outE('componentOf').otherV().hasLabel('uri').inE().hasLabel(within('at','connectsTo')).otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": [
        "fqdn",
        "ipv4",
        "ipv6"
      ]
    },
    {
      "name": "incidents",
      "description": "Find incidents related to this indicator.",
      "query": "g.outE('componentOf').otherV().hasLabel('uri').outE('observedIn').otherV().outE('attributedTo').otherV().path().unfold()",
      "objects": [
        "fqdn",
        "ipv4",
        "ipv6"
      ]
    },
    {
      "name": "pdns2",
      "description": "2-hop pDNS traversal, threshold 20, does not traverse known sinkholes.",
      "query": "g.repeat(choose(label()).option('ipv4',where(inE('resolvesTo').count().is(lte(20L))).inE('resolvesTo').dedup().otherV()).option('ipv6',where(inE('resolvesTo').count().is(lte(20L))).inE('resolvesTo').dedup().otherV()).option('fqdn',where(outE('resolvesTo').count().is(lte(20L))).outE('resolvesTo').dedup().otherV().not(has('value','sinkhole')))).times(2).path().unfold()",
      "objects": [
        "fqdn",
        "ipv4",
        "ipv6"
      ]
    },
    {
      "name": "pdns3",
      "description": "3-hop pDNS traversal, threshold 20, does not traverse known sinkholes.",
      "query": "g.repeat(choose(label()).option('ipv4',where(inE('resolvesTo').count().is(lte(20L))).inE('resolvesTo').dedup().otherV()).option('ipv6',where(inE('resolvesTo').count().is(lte(20L))).inE('resolvesTo').dedup().otherV()).option('fqdn',where(outE('resolvesTo').count().is(lte(20L))).outE('resolvesTo').dedup().otherV().not(has('value','sinkhole')))).times(3).path().unfold()",
      "objects": [
        "fqdn",
        "ipv4",
        "ipv6"
      ]
    },
    {
      "name": "threat actors",
      "description": "Find threat actors related to this content.",
      "query": "g.outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["content"]
    },
    {
      "name": "tools",
      "description": "Find tools related to this content.",
      "query": "g.outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["content"]
    },
    {
      "name": "network",
      "description": "Find network indicators related to this content.",
      "query": "g.outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('fqdn','ipv4','ipv6')).path().unfold()",
      "objects": ["content"]
    },
    {
      "name": "asn",
      "description": "Find the autonomous system and owner organization of network indicators related to this content.",
      "query": "g.outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('ipv4','ipv6')).repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()).path().unfold()",
      "objects": ["content"]
    },
    {
      "name": "threat actors",
      "description": "Find threat actors related to this hash.",
      "query": "g.outE('represents').otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["hash"]
    },
    {
      "name": "tools",
      "description": "Find tools related to this hash.",
      "query": "g.outE('represents').otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["hash"]
    },
    {
      "name": "network",
      "description": "Find network indicators related to this hash.",
      "query": "g.outE('represents').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('fqdn','ipv4','ipv6')).path().unfold()",
      "objects": ["hash"]
    },
    {
      "name": "asn",
      "description": "Find the autonomous system and owner organization of network indicators related to this hash.",
      "query": "g.outE('represents').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('ipv4','ipv6')).repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()).path().unfold()",
      "objects": ["hash"]
    },
    {
      "name": "threat actors",
      "description": "Find threat actors that use techniques that accomplish this tactic.",
      "query": "g.inE('accomplishes').otherV().inE('classifiedAs').otherV().repeat(outE('attributedTo').otherV()).times(2).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["tactic"]
    },
    {
      "name": "tools",
      "description": "Find tools that implement techniques that accomplish this tactic.",
      "query": "g.inE('accomplishes').otherV().inE('implements').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["tactic"]
    },
    {
      "name": "unattributed",
      "description": "Find techniques that are not known to be used by any threat actors or implemented by any tools.",
      "query": "g.inE('accomplishes').otherV().not(where(inE().hasLabel(within('classifiedAs','implements')))).path().unfold()",
      "objects": ["tactic"]
    },
    {
      "name": "aliases",
      "description": "Find related tool names (potential aliases for this tool).",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "asn",
      "description": "Find the autonomous system and owner organization of network indicators related to this tool.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('ipv4','ipv6')).repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()).path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "incidents",
      "description": "Find incidents with network indicators related to this tool.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('ipv4','ipv6')).outE('componentOf').otherV().outE('observedIn').otherV().outE('attributedTo').otherV().path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "network",
      "description": "Find network indicators related to this tool.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('fqdn','ipv4','ipv6')).path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "threat actors",
      "description": "Find threat actors known to use this tool.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "reports",
      "description": "Find reports that mention either the name of this tool or hashes classified as this tool.",
      "query": "g.union(inE('mentions').otherV(),inE('classifiedAs').otherV().inE('represents').otherV().inE('mentions').otherV()).path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "asn",
      "description": "Find autonomous systems related to malware used exclusively by this threat actor.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).repeat(inE('attributedTo').otherV()).times(2).inE('observedIn').otherV().hasLabel('content').outE('classifiedAs').otherV().has('category','malware').where(inE('classifiedAs').otherV().outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).count().is(eq(1L))).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('ipv4','ipv6')).not(has('category','sinkhole')).repeat(outE('memberOf').otherV()).times(2).optional(inE('owns').otherV().outE().hasLabel(without('owns')).otherV()).path().unfold()",
      "objects": ["threatActor"]
    },
    {
      "name": "network",
      "description": "Find network indicators related to malware used exclusively by this threat actor.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).repeat(inE('attributedTo').otherV()).times(2).inE('observedIn').otherV().hasLabel('content').outE('classifiedAs').otherV().has('category','malware').where(inE('classifiedAs').otherV().outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).count().is(eq(1L))).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE().hasLabel(within('at','connectsTo')).otherV().inE('componentOf').otherV().hasLabel(within('fqdn','ipv4','ipv6')).not(has('category','sinkhole')).path().unfold()",
      "objects": ["threatActor"]
    },
    {
      "name": "tools",
      "description": "Find tools used by this threat actor.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).repeat(inE('attributedTo').otherV()).times(2).inE('observedIn').otherV().hasLabel('content').outE('classifiedAs').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["threatActor"]
    },
    {
      "name": "techniques",
      "description": "Find techniques used by this threat actor.",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).repeat(inE('attributedTo').otherV()).times(2).outE('classifiedAs').otherV().path().unfold()",
      "objects": ["threatActor"]
    },
    {
      "name": "threat actors",
      "description": "Find threat actors that use this technique.",
      "query": "g.inE('classifiedAs').otherV().repeat(outE('attributedTo').otherV()).times(2).optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["technique"]
    },
    {
      "name": "tools",
      "description": "Find threat actors that use tools that implement this technique.",
      "query": "g.inE('implements').otherV().optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().outE('observedIn').otherV().repeat(outE('attributedTo').otherV()).times(2).hasLabel('threatActor').optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).path().unfold()",
      "objects": ["technique"]
    },
    {
      "name": "targets",
      "description": "Find organizations targeted using this tool",
      "query": "g.optional(emit().repeat(outE('alias').otherV().dedup()).until(cyclicPath())).inE('classifiedAs').otherV().hasLabel('content').outE('observedIn').otherV().hasLabel('event').outE('attributedTo').otherV().hasLabel('incident').outE('targets').otherV().path().unfold()",
      "objects": ["tool"]
    },
    {
      "name": "incidents",
      "description": "Find incidents related to this country",
      "query": "g.inE('locatedIn').otherV().hasLabel('organization').inE('targets').otherV().hasLabel('incident').path().unfold()",
      "objects": ["country"]
    },
    {
      "name": "tools",
      "description": "Find tools related to this campaign",
      "query": "g.inE('attributedTo').otherV().inE('attributedTo').otherV().inE('observedIn').otherV().outE('classifiedAs').otherV().path().unfold()",
      "objects": ["campaign"]
    }
  ],
  "objectSummary": {
    "ipv4": {
      "sections": [
        {
          "title": "Domains",
          "query": "g.in('resolvesTo').hasLabel('fqdn')"
        },
        {
          "title": "Reports",
          "query": "g.in('mentions').hasLabel('report')"
        },
        {
          "title": "ASN",
          "query": "g.repeat(out('memberOf')).times(2).hasLabel('asn')"
        },
        {
          "title": "Downloads",
          "query": "g.out('componentOf').hasLabel('uri').in('at').hasLabel('content').not(has('value',startingWith('[placeholder')))",
          "actions": [
            {
              "id": "open-in-vt",
              "icon": "bug"
            }
          ]
        },
        {
          "title": "Callback",
          "query": "g.out('componentOf').hasLabel('uri').in('connectsTo').hasLabel('content').not(has('value',startingWith('[placeholder')))",
          "actions": [
            {
              "id": "open-in-vt",
              "icon": "bug"
            }
          ]
        },
        {
          "title": "Incidents",
          "query": "g.out('componentOf').hasLabel('uri').out('observedIn').out('attributedTo').hasLabel('incident').not(has('value',startingWith('[placeholder')))"
        },
        {
          "title": "Signatures",
          "query": "g.out('componentOf').hasLabel('uri').out('observedIn').in('detects').hasLabel('signature')"
        },
        {
          "title": "Tools",
          "query": "g.out('componentOf').hasLabel('uri').inE().hasLabel(within('at','connectsTo')).otherV().out('classifiedAs').hasLabel('tool')"
        },
        {
          "title": "Paths",
          "query": "g.out('componentOf').hasLabel('uri').in('componentOf').hasLabel('path')"
        },
        {
          "title": "Queries",
          "query": "g.out('componentOf').hasLabel('uri').in('componentOf').hasLabel('query')"
        }
      ]
    },
    "fqdn": {
      "sections": [
        {
          "title": "IP addresses",
          "query": "g.out('resolvesTo').hasLabel('ipv4')"
        },
        {
          "title": "Reports",
          "query": "g.in('mentions').hasLabel('report')"
        },
        {
          "title": "Downloads",
          "query": "g.out('componentOf').hasLabel('uri').in('at').hasLabel('content').not(has('value',startingWith('[placeholder')))",
          "actions": [
            {
              "id": "open-in-vt",
              "icon": "bug"
            }
          ]
        },
        {
          "title": "Callback",
          "query": "g.out('componentOf').hasLabel('uri').in('connectsTo').hasLabel('content').not(has('value',startingWith('[placeholder')))",
          "actions": [
            {
              "id": "open-in-vt",
              "icon": "bug"
            }
          ]
        },
        {
          "title": "Incidents",
          "query": "g.out('componentOf').hasLabel('uri').out('observedIn').out('attributedTo').hasLabel('incident').not(has('value',startingWith('[placeholder')))"
        },
        {
          "title": "Signatures",
          "query": "g.out('componentOf').hasLabel('uri').out('observedIn').in('detects').hasLabel('signature')"
        },
        {
          "title": "Tools",
          "query": "g.out('componentOf').hasLabel('uri').inE().hasLabel(within('at','connectsTo')).otherV().out('classifiedAs').hasLabel('tool')"
        },
        {
          "title": "Paths",
          "query": "g.out('componentOf').hasLabel('uri').in('componentOf').hasLabel('path')"
        },
        {
          "title": "Queries",
          "query": "g.out('componentOf').hasLabel('uri').in('componentOf').hasLabel('query')"
        }
      ]
    },
    "hash": {
      "sections": [
        {
          "title": "Hashes",
          "query": "g.as('startNode').out('represents').in('represents').where(neq('startNode'))",
          "actions": [
            {
              "id": "open-in-vt",
              "icon": "bug"
            }
          ]
        },
        {
          "title": "Reports",
          "query": "g.out('represents').in('represents').in('mentions').hasLabel('report')"
        },
        {
          "title": "Downloads",
          "query": "g.out('represents').out('at').in('componentOf').hasLabel(within('fqdn','ipv4'))"
        },
        {
          "title": "Callback",
          "query": "g.out('represents').out('connectsTo').in('componentOf').hasLabel(within('fqdn','ipv4'))"
        },
        {
          "title": "Incidents",
          "query": "g.out('represents').out('observedIn').out('attributedTo').hasLabel('incident').not(has('value',startingWith('[placeholder')))"
        },
        {
          "title": "Signatures",
          "query": "g.out('represents').out('observedIn').in('detects').hasLabel('signature')"
        },
        {
          "title": "Tools",
          "query": "g.out('represents').out('classifiedAs').hasLabel('tool')"
        },
        {
          "title": "Paths",
          "query": "g.out('represents').outE().hasLabel(within('at','connectsTo')).otherV().in('componentOf').hasLabel('path')"
        },
        {
          "title": "Download paths",
          "query": "g.out('represents').out('at').in('componentOf').hasLabel('path')"
        },
        {
          "title": "Callback paths",
          "query": "g.out('represents').out('connectsTo').in('componentOf').hasLabel('path')"
        },
        {
          "title": "Queries",
          "query": "g.out('represents').outE().hasLabel(within('at','connectsTo')).otherV().in('componentOf').hasLabel('query')"
        },
        {
          "title": "Download queries",
          "query": "g.out('represents').out('at').in('componentOf').hasLabel('query')"
        },
        {
          "title": "Callback queries",
          "query": "g.out('represents').out('connectsTo').in('componentOf').hasLabel('query')"
        }
      ]
    },
    "report": {
      "sections": [
        {
          "title": "IP addresses",
          "query": "g.out('mentions').hasLabel('ipv4')"
        },
        {
          "title": "Domains",
          "query": "g.out('mentions').hasLabel('fqdn')"
        },
        {
          "title": "Hashes",
          "query": "g.out('mentions').hasLabel('hash')"
        },
        {
          "title": "Tools",
          "query": "g.out('mentions').hasLabel('tool')"
        },
        {
          "title": "Technique",
          "query": "g.out('mentions').hasLabel('technique')"
        },
        {
          "title": "Threat actors",
          "query": "g.out('mentions').hasLabel('threatActor')"
        },
        {
          "title": "Vulnerabilities",
          "query": "g.out('mentions').hasLabel('vulnerability')"
        },
        {
          "title": "Countries",
          "query": "g.out('mentions').hasLabel('country')"
        },
        {
          "title": "Sectors",
          "query": "g.out('mentions').hasLabel('sector')"
        },
        {
          "title": "Related reports",
          "query": "g.out('mentions').hasLabel(within('ipv4','hash')).in('mentions').hasLabel('report')"
        }
      ]
    },
    "tool": {
      "sections": [
        {
          "title": "Aliases",
          "query": "g.as('startNode').optional(emit().repeat(out('alias')).until(cyclicPath())).where(neq('startNode'))"
        },
        {
          "title": "Reports",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).union(inE('mentions').otherV(),inE('classifiedAs').otherV().in('represents').in('mentions')).hasLabel('report')"
        },
        {
          "title": "Threat actors",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('classifiedAs').out('observedIn').out('attributedTo').out('attributedTo').hasLabel('threatActor')"
        },
        {
          "title": "Techniques",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).out('implements').hasLabel('technique')"
        },
        {
          "title": "Samples",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('classifiedAs').hasLabel('content').not(has('value',startingWith('[placeholder')))",
          "actions": [
            {
              "id": "open-in-vt",
              "icon": "bug"
            }
          ]
        },
        {
          "title": "Downloads",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('classifiedAs').out('at').in('componentOf').hasLabel(within('fqdn','ipv4'))"
        },
        {
          "title": "Callback",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('classifiedAs').out('connectsTo').in('componentOf').hasLabel(within('fqdn','ipv4'))"
        },
        {
          "title": "Incidents",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('classifiedAs').out('observedIn').out('attributedTo').hasLabel('incident').not(has('value',startingWith('[placeholder')))"
        },
        {
          "title": "Signatures",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('classifiedAs').out('observedIn').in('detects').hasLabel('signature')"
        }
      ]
    },
    "threatActor": {
      "sections": [
        {
          "title": "Aliases",
          "query": "g.as('startNode').optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).where(neq('startNode'))"
        },
        {
          "title": "Reports",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('mentions').hasLabel('report')"
        },
        {
          "title": "Techniques",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('attributedTo').in('attributedTo').out('classifiedAs').hasLabel('technique')"
        },
        {
          "title": "Tools",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('attributedTo').in('attributedTo').in('observedIn').hasLabel('content').out('classifiedAs').hasLabel('tool')"
        },
        {
          "title": "Incidents",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('attributedTo').hasLabel('incident').not(has('value',startingWith('[placeholder')))"
        },
        {
          "title": "Campaigns",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('attributedTo').hasLabel('incident').out('attributedTo').hasLabel('campaign')"
        },
        {
          "title": "Target sectors",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('attributedTo').hasLabel('incident').out('targets').hasLabel('organization').out('memberOf').hasLabel('sector')"
        },
        {
          "title": "Target countries",
          "query": "g.optional(emit().repeat(out('alias').dedup()).until(cyclicPath())).in('attributedTo').hasLabel('incident').out('targets').hasLabel('organization').out('locatedIn').hasLabel('country')"
        }
      ]
    }
  }
}
